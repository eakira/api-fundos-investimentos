// Code generated by MockGen. DO NOT EDIT.
// Source: src/adapter/input/controller/FundosController.go
//
// Generated by this command:
//
//	mockgen -source=src/adapter/input/controller/FundosController.go -destination=src/test/mocks/FundosController_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	request "api-fundos-investimentos/adapter/output/model/request"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockFundosControllerInterface is a mock of FundosControllerInterface interface.
type MockFundosControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFundosControllerInterfaceMockRecorder
}

// MockFundosControllerInterfaceMockRecorder is the mock recorder for MockFundosControllerInterface.
type MockFundosControllerInterfaceMockRecorder struct {
	mock *MockFundosControllerInterface
}

// NewMockFundosControllerInterface creates a new mock instance.
func NewMockFundosControllerInterface(ctrl *gomock.Controller) *MockFundosControllerInterface {
	mock := &MockFundosControllerInterface{ctrl: ctrl}
	mock.recorder = &MockFundosControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFundosControllerInterface) EXPECT() *MockFundosControllerInterfaceMockRecorder {
	return m.recorder
}

// CreateBalanceteController mocks base method.
func (m *MockFundosControllerInterface) CreateBalanceteController(arg0 []request.BalanceteRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateBalanceteController", arg0)
}

// CreateBalanceteController indicates an expected call of CreateBalanceteController.
func (mr *MockFundosControllerInterfaceMockRecorder) CreateBalanceteController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBalanceteController", reflect.TypeOf((*MockFundosControllerInterface)(nil).CreateBalanceteController), arg0)
}

// CreateExtratoController mocks base method.
func (m *MockFundosControllerInterface) CreateExtratoController(arg0 []request.ExtratoRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateExtratoController", arg0)
}

// CreateExtratoController indicates an expected call of CreateExtratoController.
func (mr *MockFundosControllerInterfaceMockRecorder) CreateExtratoController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateExtratoController", reflect.TypeOf((*MockFundosControllerInterface)(nil).CreateExtratoController), arg0)
}

// CreateFundosController mocks base method.
func (m *MockFundosControllerInterface) CreateFundosController(arg0 []request.FundosRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateFundosController", arg0)
}

// CreateFundosController indicates an expected call of CreateFundosController.
func (mr *MockFundosControllerInterfaceMockRecorder) CreateFundosController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFundosController", reflect.TypeOf((*MockFundosControllerInterface)(nil).CreateFundosController), arg0)
}

// CreateInformacaoDiariaController mocks base method.
func (m *MockFundosControllerInterface) CreateInformacaoDiariaController(arg0 []request.InformacaoDiariaRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateInformacaoDiariaController", arg0)
}

// CreateInformacaoDiariaController indicates an expected call of CreateInformacaoDiariaController.
func (mr *MockFundosControllerInterfaceMockRecorder) CreateInformacaoDiariaController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInformacaoDiariaController", reflect.TypeOf((*MockFundosControllerInterface)(nil).CreateInformacaoDiariaController), arg0)
}

// CreateTopicController mocks base method.
func (m *MockFundosControllerInterface) CreateTopicController() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTopicController")
}

// CreateTopicController indicates an expected call of CreateTopicController.
func (mr *MockFundosControllerInterfaceMockRecorder) CreateTopicController() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTopicController", reflect.TypeOf((*MockFundosControllerInterface)(nil).CreateTopicController))
}

// DownloadArquivosCVMController mocks base method.
func (m *MockFundosControllerInterface) DownloadArquivosCVMController(arg0 request.FundosCvmArquivosQueueRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DownloadArquivosCVMController", arg0)
}

// DownloadArquivosCVMController indicates an expected call of DownloadArquivosCVMController.
func (mr *MockFundosControllerInterfaceMockRecorder) DownloadArquivosCVMController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadArquivosCVMController", reflect.TypeOf((*MockFundosControllerInterface)(nil).DownloadArquivosCVMController), arg0)
}

// ProcessarArquivosCVMController mocks base method.
func (m *MockFundosControllerInterface) ProcessarArquivosCVMController(arg0 request.FundosCvmArquivosQueueRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessarArquivosCVMController", arg0)
}

// ProcessarArquivosCVMController indicates an expected call of ProcessarArquivosCVMController.
func (mr *MockFundosControllerInterfaceMockRecorder) ProcessarArquivosCVMController(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessarArquivosCVMController", reflect.TypeOf((*MockFundosControllerInterface)(nil).ProcessarArquivosCVMController), arg0)
}

// SincronizarFundosController mocks base method.
func (m *MockFundosControllerInterface) SincronizarFundosController(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SincronizarFundosController", c)
}

// SincronizarFundosController indicates an expected call of SincronizarFundosController.
func (mr *MockFundosControllerInterfaceMockRecorder) SincronizarFundosController(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SincronizarFundosController", reflect.TypeOf((*MockFundosControllerInterface)(nil).SincronizarFundosController), c)
}
